/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package animalcrossing;

/**
 *
 * @author jauga
 */
public class Orchard extends javax.swing.JFrame
{
    TreeTracker forest = new TreeTracker();
    Player person = new Player(2);
    Dog sam = new Dog(TurnCounter.getTurnCounter());
    Doctor doc = new Doctor(person);
    private Tree currentTree;
    /**
     * Creates new form Orchard
     */
    public Orchard()
    {
        initComponents();
    }
    public void dogCheck()
    {
        refreshInventory();
        if(sam.getNumOfTreatsFed() >=5)
        {
            win();
        }
        if(sam.shouldILeave())
        {
            System.out.println("Your dog yawns and skips off back home");
            endGame();
        }
        sam.decreaseActionsUntilLeave();
    }
    public void endGame()
    {
        System.exit(0);
    }

    public void refreshInventory()
    {
        appleLabel.setText(Integer.toString(person.getNumOfApples()));
        peachLabel.setText(Integer.toString(person.getNumOfPeaches()));
        cherryLabel.setText(Integer.toString(person.getNumOfCherry()));
        pearLabel.setText(Integer.toString(person.getNumOfPears()));
        boneLabel.setText(Integer.toString(person.getNumOfTreats()));
        nestLabel.setText(Integer.toString(person.getNumOfNests()));
        turnsUntilLeave.setText(Integer.toString(sam.getActionsUntilLeave()));
        heartCheck();
        
    }
    public void heartCheck()
    {
        if (person.getCurrentHealth() == 2)
        {
            heart1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/heart.png")));
            heart2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/heart.png")));
        }
        if (person.getCurrentHealth() == 1)
        {
            heart1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/heart.png")));
            heart2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/emptyHeart.png")));
        }
        if (person.getCurrentHealth() == 0)
        {
            heart1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/emptyHeart.png")));
            heart2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/emptyHeart.png")));
        }
    }
    public void win()
    {
        System.out.println("You and your dog return home and you dog loves you very much!");
        System.exit(0);
        System.out.println("You Win.");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        Tree1 = new javax.swing.JButton();
        Tree2 = new javax.swing.JButton();
        Tree3 = new javax.swing.JButton();
        Tree5 = new javax.swing.JButton();
        Tree4 = new javax.swing.JButton();
        Tree6 = new javax.swing.JButton();
        Tree7 = new javax.swing.JButton();
        Tree8 = new javax.swing.JButton();
        Tree9 = new javax.swing.JButton();
        Tree10 = new javax.swing.JButton();
        DogButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        docButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        appleLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cherryLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        peachLabel = new javax.swing.JLabel();
        pearLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        boneLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nestLabel = new javax.swing.JLabel();
        turnsUntilLeave = new javax.swing.JLabel();
        heart1 = new javax.swing.JLabel();
        heart2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Tree1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/Tree_NL (2).png"))); // NOI18N
        Tree1.setBorder(null);
        Tree1.setBorderPainted(false);
        Tree1.setContentAreaFilled(false);
        Tree1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
        {
            public void mouseMoved(java.awt.event.MouseEvent evt)
            {
                Tree1MouseMoved(evt);
            }
        });
        Tree1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Tree1ActionPerformed(evt);
            }
        });

        Tree2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/Tree_NL (2).png"))); // NOI18N
        Tree2.setBorder(null);
        Tree2.setBorderPainted(false);
        Tree2.setContentAreaFilled(false);
        Tree2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
        {
            public void mouseMoved(java.awt.event.MouseEvent evt)
            {
                Tree2MouseMoved(evt);
            }
        });
        Tree2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Tree2ActionPerformed(evt);
            }
        });

        Tree3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/Tree_NL (2).png"))); // NOI18N
        Tree3.setBorder(null);
        Tree3.setBorderPainted(false);
        Tree3.setContentAreaFilled(false);
        Tree3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
        {
            public void mouseMoved(java.awt.event.MouseEvent evt)
            {
                Tree3MouseMoved(evt);
            }
        });
        Tree3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Tree3ActionPerformed(evt);
            }
        });

        Tree5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/Tree_NL (2).png"))); // NOI18N
        Tree5.setBorder(null);
        Tree5.setBorderPainted(false);
        Tree5.setContentAreaFilled(false);
        Tree5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
        {
            public void mouseMoved(java.awt.event.MouseEvent evt)
            {
                Tree5MouseMoved(evt);
            }
        });
        Tree5.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Tree5ActionPerformed(evt);
            }
        });

        Tree4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/Tree_NL (2).png"))); // NOI18N
        Tree4.setToolTipText("");
        Tree4.setBorder(null);
        Tree4.setBorderPainted(false);
        Tree4.setContentAreaFilled(false);
        Tree4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
        {
            public void mouseMoved(java.awt.event.MouseEvent evt)
            {
                Tree4MouseMoved(evt);
            }
        });
        Tree4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Tree4ActionPerformed(evt);
            }
        });

        Tree6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/Tree_NL (2).png"))); // NOI18N
        Tree6.setBorder(null);
        Tree6.setBorderPainted(false);
        Tree6.setContentAreaFilled(false);
        Tree6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
        {
            public void mouseMoved(java.awt.event.MouseEvent evt)
            {
                Tree6MouseMoved(evt);
            }
        });
        Tree6.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Tree6ActionPerformed(evt);
            }
        });

        Tree7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/Tree_NL (2).png"))); // NOI18N
        Tree7.setBorder(null);
        Tree7.setBorderPainted(false);
        Tree7.setContentAreaFilled(false);
        Tree7.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
        {
            public void mouseMoved(java.awt.event.MouseEvent evt)
            {
                Tree7MouseMoved(evt);
            }
        });
        Tree7.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Tree7ActionPerformed(evt);
            }
        });

        Tree8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/Tree_NL (2).png"))); // NOI18N
        Tree8.setBorder(null);
        Tree8.setBorderPainted(false);
        Tree8.setContentAreaFilled(false);
        Tree8.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
        {
            public void mouseMoved(java.awt.event.MouseEvent evt)
            {
                Tree8MouseMoved(evt);
            }
        });
        Tree8.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Tree8ActionPerformed(evt);
            }
        });

        Tree9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/Tree_NL (2).png"))); // NOI18N
        Tree9.setBorder(null);
        Tree9.setBorderPainted(false);
        Tree9.setContentAreaFilled(false);
        Tree9.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
        {
            public void mouseMoved(java.awt.event.MouseEvent evt)
            {
                Tree9MouseMoved(evt);
            }
        });
        Tree9.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Tree9ActionPerformed(evt);
            }
        });

        Tree10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/Tree_NL (2).png"))); // NOI18N
        Tree10.setBorder(null);
        Tree10.setBorderPainted(false);
        Tree10.setContentAreaFilled(false);
        Tree10.addMouseMotionListener(new java.awt.event.MouseMotionAdapter()
        {
            public void mouseMoved(java.awt.event.MouseEvent evt)
            {
                Tree10MouseMoved(evt);
            }
        });
        Tree10.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Tree10ActionPerformed(evt);
            }
        });

        DogButton.setText("Feed Treat?");
        DogButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                DogButtonActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/dog.png"))); // NOI18N

        docButton.setText("Doctor");
        docButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                docButtonActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/Apple.png"))); // NOI18N
        jLabel2.setText("jLabel2");

        appleLabel.setText("0");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/Cherry.png"))); // NOI18N

        cherryLabel.setText("0");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/Peach.png"))); // NOI18N

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/Pear.png"))); // NOI18N

        peachLabel.setText("0");

        pearLabel.setText("0");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/dogTreat.png"))); // NOI18N

        boneLabel.setText("0");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/waspNest.png"))); // NOI18N

        nestLabel.setText("0");

        turnsUntilLeave.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        turnsUntilLeave.setText(" ");

        heart1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/heart.png"))); // NOI18N

        heart2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/animalcrossing/heart.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pearLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(Tree6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Tree7, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(Tree8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(peachLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(Tree1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Tree2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Tree3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(appleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Tree4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Tree5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Tree9, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Tree10, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cherryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(docButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(278, 278, 278))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(turnsUntilLeave, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(boneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DogButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(heart1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(heart2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(nestLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel8)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Tree1)
                        .addComponent(Tree2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Tree3)
                        .addComponent(appleLabel))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Tree4)
                            .addComponent(Tree5)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(cherryLabel)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Tree6)
                            .addComponent(Tree7)
                            .addComponent(Tree8)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(peachLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Tree10)
                            .addComponent(Tree9))
                        .addGap(7, 7, 7)
                        .addComponent(pearLabel)
                        .addGap(4, 4, 4)
                        .addComponent(docButton)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(turnsUntilLeave, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boneLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(heart2)
                                    .addComponent(heart1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nestLabel)
                                .addGap(68, 68, 68))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(DogButton)
                                .addContainerGap())))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Tree1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Tree1ActionPerformed
    {//GEN-HEADEREND:event_Tree1ActionPerformed
        refreshInventory();
        TurnCounter.useTurn();
        dogCheck();
        currentTree = forest.forest.get(0);
        TreeInteract indTree = new TreeInteract(person, currentTree);
        indTree.setVisible(true);
        Tree1.setEnabled(false);
    }//GEN-LAST:event_Tree1ActionPerformed

    private void Tree2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Tree2ActionPerformed
    {//GEN-HEADEREND:event_Tree2ActionPerformed
        refreshInventory();
        TurnCounter.useTurn();
        dogCheck();
        currentTree = forest .forest.get(1);
        TreeInteract indTree = new TreeInteract(person, currentTree);
        indTree.setVisible(true);
        Tree2.setEnabled(false);
    }//GEN-LAST:event_Tree2ActionPerformed

    private void Tree3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Tree3ActionPerformed
    {//GEN-HEADEREND:event_Tree3ActionPerformed
        refreshInventory();
        TurnCounter.useTurn();
        dogCheck();
        currentTree = forest .forest.get(2);
        TreeInteract indTree = new TreeInteract(person, currentTree);
        indTree.setVisible(true);
        Tree3.setEnabled(false);
    }//GEN-LAST:event_Tree3ActionPerformed

    private void Tree4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Tree4ActionPerformed
    {//GEN-HEADEREND:event_Tree4ActionPerformed
        refreshInventory();
        TurnCounter.useTurn();
        dogCheck();
        currentTree = forest .forest.get(3);
        TreeInteract indTree = new TreeInteract(person, currentTree);
        indTree.setVisible(true);
        Tree4.setEnabled(false);
    }//GEN-LAST:event_Tree4ActionPerformed

    private void Tree5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Tree5ActionPerformed
    {//GEN-HEADEREND:event_Tree5ActionPerformed
        refreshInventory();
        TurnCounter.useTurn();
        dogCheck();
        currentTree = forest .forest.get(4);
        TreeInteract indTree = new TreeInteract(person, currentTree);
        indTree.setVisible(true);
        Tree5.setEnabled(false);
    }//GEN-LAST:event_Tree5ActionPerformed

    private void Tree6ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Tree6ActionPerformed
    {//GEN-HEADEREND:event_Tree6ActionPerformed
        refreshInventory();
        TurnCounter.useTurn();
        dogCheck();
        currentTree = forest .forest.get(5);
        TreeInteract indTree = new TreeInteract(person, currentTree);
        indTree.setVisible(true);
        Tree6.setEnabled(false);
    }//GEN-LAST:event_Tree6ActionPerformed

    private void Tree7ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Tree7ActionPerformed
    {//GEN-HEADEREND:event_Tree7ActionPerformed
        refreshInventory();
        TurnCounter.useTurn();
        dogCheck();
        currentTree = forest .forest.get(6);
        TreeInteract indTree = new TreeInteract(person, currentTree);
        indTree.setVisible(true);
        Tree7.setEnabled(false);
    }//GEN-LAST:event_Tree7ActionPerformed

    private void Tree8ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Tree8ActionPerformed
    {//GEN-HEADEREND:event_Tree8ActionPerformed
        refreshInventory();
        TurnCounter.useTurn();
        dogCheck();
        currentTree = forest .forest.get(7);
        TreeInteract indTree = new TreeInteract(person, currentTree);
        indTree.setVisible(true);
        Tree8.setEnabled(false);
    }//GEN-LAST:event_Tree8ActionPerformed

    private void Tree9ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Tree9ActionPerformed
    {//GEN-HEADEREND:event_Tree9ActionPerformed
        refreshInventory();
        TurnCounter.useTurn();
        dogCheck();
        currentTree = forest .forest.get(8);
        TreeInteract indTree = new TreeInteract(person, currentTree);
        indTree.setVisible(true);
        Tree9.setEnabled(false);
    }//GEN-LAST:event_Tree9ActionPerformed

    private void Tree10ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Tree10ActionPerformed
    {//GEN-HEADEREND:event_Tree10ActionPerformed
        refreshInventory();
        TurnCounter.useTurn();
        dogCheck();
        currentTree = forest .forest.get(9);
        TreeInteract indTree = new TreeInteract(person, currentTree);
        indTree.setVisible(true);
        Tree10.setEnabled(false);
    }//GEN-LAST:event_Tree10ActionPerformed

    private void DogButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_DogButtonActionPerformed
    {//GEN-HEADEREND:event_DogButtonActionPerformed
        if(person.getNumOfTreats() > 0)
        {
            System.out.println("Your dog looks at you with shiny eyes and a hopeful expression,\n"
                    + "he wags his trail joyfully as you toss him a treat.");
            person.giveTreatToDog();
            sam.addActionsUntilLeave();
            sam.setNumOfTreatsFed(sam.getNumOfTreatsFed() + 1);
        }
        else
        {
            System.out.println("Your dog whimpers at your lack of treats");
        }
    }//GEN-LAST:event_DogButtonActionPerformed

    private void docButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_docButtonActionPerformed
    {//GEN-HEADEREND:event_docButtonActionPerformed
        doc.setVisible(true);
    }//GEN-LAST:event_docButtonActionPerformed

    private void Tree1MouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_Tree1MouseMoved
    {//GEN-HEADEREND:event_Tree1MouseMoved
        refreshInventory();
    }//GEN-LAST:event_Tree1MouseMoved

    private void Tree2MouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_Tree2MouseMoved
    {//GEN-HEADEREND:event_Tree2MouseMoved
        refreshInventory();
    }//GEN-LAST:event_Tree2MouseMoved

    private void Tree3MouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_Tree3MouseMoved
    {//GEN-HEADEREND:event_Tree3MouseMoved
        refreshInventory();
    }//GEN-LAST:event_Tree3MouseMoved

    private void Tree4MouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_Tree4MouseMoved
    {//GEN-HEADEREND:event_Tree4MouseMoved
        refreshInventory();
    }//GEN-LAST:event_Tree4MouseMoved

    private void Tree5MouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_Tree5MouseMoved
    {//GEN-HEADEREND:event_Tree5MouseMoved
        refreshInventory();
    }//GEN-LAST:event_Tree5MouseMoved

    private void Tree6MouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_Tree6MouseMoved
    {//GEN-HEADEREND:event_Tree6MouseMoved
        refreshInventory();
    }//GEN-LAST:event_Tree6MouseMoved

    private void Tree7MouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_Tree7MouseMoved
    {//GEN-HEADEREND:event_Tree7MouseMoved
        refreshInventory();
    }//GEN-LAST:event_Tree7MouseMoved

    private void Tree8MouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_Tree8MouseMoved
    {//GEN-HEADEREND:event_Tree8MouseMoved
        refreshInventory();
    }//GEN-LAST:event_Tree8MouseMoved

    private void Tree9MouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_Tree9MouseMoved
    {//GEN-HEADEREND:event_Tree9MouseMoved
        refreshInventory();
    }//GEN-LAST:event_Tree9MouseMoved

    private void Tree10MouseMoved(java.awt.event.MouseEvent evt)//GEN-FIRST:event_Tree10MouseMoved
    {//GEN-HEADEREND:event_Tree10MouseMoved
        refreshInventory();
    }//GEN-LAST:event_Tree10MouseMoved

    public Tree getCurrentTree()
    {
        return currentTree;
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DogButton;
    private javax.swing.JButton Tree1;
    private javax.swing.JButton Tree10;
    private javax.swing.JButton Tree2;
    private javax.swing.JButton Tree3;
    private javax.swing.JButton Tree4;
    private javax.swing.JButton Tree5;
    private javax.swing.JButton Tree6;
    private javax.swing.JButton Tree7;
    private javax.swing.JButton Tree8;
    private javax.swing.JButton Tree9;
    private javax.swing.JLabel appleLabel;
    private javax.swing.JLabel boneLabel;
    private javax.swing.JLabel cherryLabel;
    private javax.swing.JButton docButton;
    private javax.swing.JLabel heart1;
    private javax.swing.JLabel heart2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel nestLabel;
    private javax.swing.JLabel peachLabel;
    private javax.swing.JLabel pearLabel;
    private javax.swing.JLabel turnsUntilLeave;
    // End of variables declaration//GEN-END:variables
}
